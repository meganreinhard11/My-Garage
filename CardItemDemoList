import SwiftUI

// MARK: - Demo / Usage

struct CardItemDemoList: View {
    struct DemoItem: Identifiable {
        let id = UUID()
        let title: String
        let subtitle: String
        let footnote: String
        let avatar: URL?
        let badge: String?
    }

    @State private var items: [DemoItem] = [
        .init(title: "2016 Honda Accord EX-L",
              subtitle: "Next service: 10/15 • 64,500 mi",
              footnote: "VIN ending • 1234",
              avatar: URL(string: "https://images.pexels.com/photos/358070/pexels-photo-358070.jpeg"),
              badge: "Primary"),
        .init(title: "2013 Honda CR-V",
              subtitle: "Tire rotation due soon",
              footnote: "VIN ending • 9876",
              avatar: nil,
              badge: nil)
    ]

    var body: some View {
        NavigationStack {
            List {
                ForEach(items) { item in
                    CardItemView(
                        title: item.title,
                        subtitle: item.subtitle,
                        footnote: item.footnote,
                        avatarURL: item.avatar,
                        systemImage: "car.fill",
                        badge: item.badge,
                        // Avatar pass-through examples:
                        avatarShowBorder: item.badge != nil,         // show subtle ring for "Primary"
                        avatarBorderColor: .accentColor,
                        avatarBorderWidth: 1
                    ) {
                        // Handle tap
                    }
                    .listRowInsets(EdgeInsets())               // edge-to-edge card
                    .listRowSeparator(.hidden)                 // hide default separator
                    .listRowBackground(Color.clear)            // let card shadow show
                    .swipeActions(edge: .trailing, allowsFullSwipe: true) {
                        Button(role: .destructive) {
                            withAnimation {
                                if let idx = items.firstIndex(where: { $0.id == item.id }) {
                                    items.remove(at: idx)
                                }
                            }
                        } label: {
                            Label("Delete", systemImage: "trash")
                        }
                    }
                    .swipeActions(edge: .leading) {
                        Button {
                            // Pin action
                        } label: {
                            Label("Pin", systemImage: "pin")
                        }
                        .tint(.yellow)
                    }
                }
            }
            .listStyle(.plain)
            .navigationTitle("My Garage")
            .toolbar {
                ToolbarItem(placement: .topBarTrailing) {
                    Button {
                        // Add new item
                    } label: {
                        Image(systemName: "plus.circle.fill")
                    }
                }
            }
        }
    }
}

// MARK: - Previews

#Preview("CardItemView (Standalone)") {
    VStack(spacing: 16) {
        CardItemView(
            title: "2016 Honda Accord EX-L",
            subtitle: "Next service: 10/15 • 64,500 mi",
            footnote: "VIN • 1HGCR2F83GA012345",
            avatarURL: URL(string: "https://images.pexels.com/photos/358070/pexels-photo-358070.jpeg"),
            badge: "Primary",
            // Show an accent border on avatar for the primary item
            avatarShowBorder: true,
            avatarBorderColor: .accentColor,
            avatarBorderWidth: 1.5
        )

        CardItemView(
            title: "Upload Receipt",
            subtitle: "JPEG or PNG • up to 10 MB",
            footnote: "",
            avatarURL: nil,
            systemImage: "doc.on.doc.fill",
            badge: "Action",
            showsChevron: false,
            isLoading: false,
            // Larger avatar, subtle neutral ring
            avatarSize: 56,
            avatarShowBorder: true,
            avatarBorderColor: .gray.opacity(0.25),
            avatarBorderWidth: 1
        )
    }
    .padding()
    .background(Color(UIColor.systemGroupedBackground))
}

#Preview("CardItemView in List (Swipe)") {
    CardItemDemoList()
}
