struct CardItemView: View {
    var title: String
    var subtitle: String? = nil
    var footnote: String? = nil
    var avatarURL: URL? = nil
    var systemImage: String = "car.fill"
    var badge: String? = nil
    var badgeSystemImage: String? = nil   // NEW: optional SF Symbol for the badge
    var showsChevron: Bool = true
    var isLoading: Bool = false
    var onTap: (() -> Void)? = nil

    var body: some View {
        Card(onTap: onTap) {
            HStack(spacing: 12) {
                AvatarView(url: avatarURL, systemImage: systemImage)

                VStack(alignment: .leading, spacing: 4) {
                    HStack(alignment: .firstTextBaseline) {
                        Text(title)
                            .font(.headline)
                            .lineLimit(1)
                            .accessibilityAddTraits(.isHeader)

                        Spacer(minLength: 8)

                        // Updated badge with optional system image
                        if badge != nil || badgeSystemImage != nil {
                            badgeView
                        }
                    }

                    if let subtitle {
                        Text(subtitle)
                            .font(.subheadline)
                            .foregroundStyle(.secondary)
                            .lineLimit(2)
                    }

                    if let footnote, !footnote.isEmpty {
                        Text(footnote)
                            .font(.footnote)
                            .foregroundStyle(.tertiary)
                            .lineLimit(1)
                    }
                }

                if showsChevron {
                    Image(systemName: "chevron.right")
                        .font(.footnote.weight(.semibold))
                        .foregroundStyle(.tertiary)
                        .accessibilityHidden(true)
                }
            }
        }
        .redacted(reason: isLoading ? .placeholder : [])
        .accessibilityElement(children: .combine)
    }

    // MARK: - Badge View

    @ViewBuilder
    private var badgeView: some View {
        let text = badge ?? "" // allow icon-only
        Group {
            if let icon = badgeSystemImage, !text.isEmpty {
                Label {
                    Text(text)
                } icon: {
                    Image(systemName: icon)
                        .imageScale(.small)
                }
            } else if let icon = badgeSystemImage {
                Image(systemName: icon)
                    .imageScale(.small)
                    .accessibilityLabel("Badge")
            } else if !text.isEmpty {
                Text(text)
            }
        }
        .font(.caption2.weight(.semibold))
        .padding(.horizontal, 6)
        .padding(.vertical, 3)
        .background(Capsule().fill(.thinMaterial))
        .overlay(Capsule().stroke(.gray.opacity(0.25), lineWidth: 0.5))
        .accessibilityLabel(accessibilityBadgeLabel)
    }

    private var accessibilityBadgeLabel: String {
        var parts: [String] = ["Badge"]
        if let badge { parts.append(badge) }
        if let badgeSystemImage { parts.append("with icon \(badgeSystemImage)") }
        return parts.joined(separator: " ")
    }
}

// MARK: - Demo / Usage

struct CardItemDemoList: View {
    struct DemoItem: Identifiable {
        let id = UUID()
        let title: String
        let subtitle: String
        let footnote: String
        let avatar: URL?
        let badge: String?
        let badgeIcon: String?
    }

    @State private var items: [DemoItem] = [
        .init(title: "2016 Honda Accord EX-L",
              subtitle: "Next service: 10/15 • 64,500 mi",
              footnote: "VIN ending • 1234",
              avatar: URL(string: "https://images.pexels.com/photos/358070/pexels-photo-358070.jpeg"),
              badge: "Primary",
              badgeIcon: "checkmark.seal.fill"),
        .init(title: "2013 Honda CR-V",
              subtitle: "Tire rotation due soon",
              footnote: "VIN ending • 9876",
              avatar: nil,
              badge: nil,
              badgeIcon: nil)
    ]

    var body: some View {
        NavigationStack {
            List {
                ForEach(items) { item in
                    CardItemView(
                        title: item.title,
                        subtitle: item.subtitle,
                        footnote: item.footnote,
                        avatarURL: item.avatar,
                        systemImage: "car.fill",
                        badge: item.badge,
                        badgeSystemImage: item.badgeIcon,   // NEW
                        showsChevron: true,
                        onTap: { /* Handle tap */ }
                    )
                    .listRowInsets(EdgeInsets())
                    .listRowSeparator(.hidden)
                    .listRowBackground(Color.clear)
                    .swipeActions(edge: .trailing, allowsFullSwipe: true) {
                        Button(role: .destructive) {
                            withAnimation {
                                _ = items.firstIndex(where: { $0.id == item.id }).map { items.remove(at: $0) }
                            }
                        } label: {
                            Label("Delete", systemImage: "trash")
                        }
                    }
                    .swipeActions(edge: .leading) {
                        Button { /* Pin action */ } label: {
                            Label("Pin", systemImage: "pin")
                        }.tint(.yellow)
                    }
                }
            }
            .listStyle(.plain)
            .navigationTitle("My Garage")
            .toolbar {
                ToolbarItem(placement: .topBarTrailing) {
                    Button { /* Add new item */ } label: {
                        Image(systemName: "plus.circle.fill")
                    }
                }
            }
        }
    }
}

// MARK: - Previews

#Preview("CardItemView (Standalone)") {
    VStack(spacing: 16) {
        CardItemView(
            title: "2016 Honda Accord EX-L",
            subtitle: "Next service: 10/15 • 64,500 mi",
            footnote: "VIN • 1HGCR2F83GA012345",
            avatarURL: URL(string: "https://images.pexels.com/photos/358070/pexels-photo-358070.jpeg"),
            badge: "Primary",
            badgeSystemImage: "checkmark.seal.fill"
        )

        CardItemView(
            title: "Upload Receipt",
            subtitle: "JPEG or PNG • up to 10 MB",
            footnote: "",
            avatarURL: nil,
            systemImage: "doc.on.doc.fill",
            badge: "Action",
            badgeSystemImage: "bolt.fill",
            showsChevron: false,
            isLoading: false
        )
    }
    .padding()
    .background(Color(UIColor.systemGroupedBackground))
}

#Preview("CardItemView in List (Swipe)") {
    CardItemDemoList()
}
