import SwiftUI

struct CardItemView: View {
    var title: String
    var subtitle: String? = nil
    var footnote: String? = nil
    var avatarURL: URL? = nil
    var systemImage: String = "car.fill"

    // Badge
    var badge: String? = nil
    var badgeSystemImage: String? = nil   // if you added icon support earlier

    // Avatar passthrough (NEW)
    var avatarSize: CGFloat = 44
    var avatarShowBorder: Bool = false
    var avatarBorderColor: Color = .gray.opacity(0.25)
    var avatarBorderWidth: CGFloat = 1

    var showsChevron: Bool = true
    var isLoading: Bool = false
    var onTap: (() -> Void)? = nil

    var body: some View {
        Card(onTap: onTap) {
            HStack(spacing: 12) {
                AvatarView(
                    url: avatarURL,
                    systemImage: systemImage,
                    size: avatarSize,
                    showBorder: avatarShowBorder,
                    borderColor: avatarBorderColor,
                    borderWidth: avatarBorderWidth
                )

                VStack(alignment: .leading, spacing: 4) {
                    HStack(alignment: .firstTextBaseline) {
                        Text(title)
                            .font(.headline)
                            .lineLimit(1)
                            .accessibilityAddTraits(.isHeader)

                        Spacer(minLength: 8)

                        if badge != nil || badgeSystemImage != nil {
                            badgeView
                        }
                    }

                    if let subtitle {
                        Text(subtitle)
                            .font(.subheadline)
                            .foregroundStyle(.secondary)
                            .lineLimit(2)
                    }

                    if let footnote, !footnote.isEmpty {
                        Text(footnote)
                            .font(.footnote)
                            .foregroundStyle(.tertiary)
                            .lineLimit(1)
                    }
                }

                if showsChevron {
                    Image(systemName: "chevron.right")
                        .font(.footnote.weight(.semibold))
                        .foregroundStyle(.tertiary)
                        .accessibilityHidden(true)
                }
            }
        }
        .redacted(reason: isLoading ? .placeholder : [])
        .accessibilityElement(children: .combine)
    }

    // MARK: - Badge View (supports optional icon)
    @ViewBuilder
    private var badgeView: some View {
        let text = badge ?? ""
        Group {
            if let icon = badgeSystemImage, !text.isEmpty {
                Label { Text(text) } icon: {
                    Image(systemName: icon).imageScale(.small)
                }
            } else if let icon = badgeSystemImage {
                Image(systemName: icon)
                    .imageScale(.small)
                    .accessibilityLabel("Badge")
            } else if !text.isEmpty {
                Text(text)
            }
        }
        .font(.caption2.weight(.semibold))
        .padding(.horizontal, 6)
        .padding(.vertical, 3)
        .background(Capsule().fill(.thinMaterial))
        .overlay(Capsule().stroke(.gray.opacity(0.25), lineWidth: 0.5))
        .accessibilityLabel(accessibilityBadgeLabel)
    }

    private var accessibilityBadgeLabel: String {
        var parts: [String] = ["Badge"]
        if let badge { parts.append(badge) }
        if let badgeSystemImage { parts.append("with icon \(badgeSystemImage)") }
        return parts.joined(separator: " ")
    }
}
